import 'dart:io';
import 'dart:convert';

class Shell{

  Shell();

  Map<String, dynamic> _mapForResult = {
        "status": null,
        "pId": null,
        "response": null
  };

  Future<Map<String, dynamic>> executableCommand(String command, {List<String> arguments}) async{
    try{
      ProcessResult processResultFromRunCommand = await Process.run(command, arguments ?? new List(), runInShell: true);
      
      dynamic returnProcess = processResultFromRunCommand.stdout;

      if(returnProcess == null){
        this._mapForResult["status"] = false;
        return _mapForResult;
      }else{
        this._mapForResult["status"] = true;
        this._mapForResult["response"] = returnProcess.toString();
        this._mapForResult["pId"] = processResultFromRunCommand.pid;
        return this._mapForResult;
      }
    }catch(error){
      print(error.toString());
      this._mapForResult["status"] = false;
      this._mapForResult["error"] = true;
      this._mapForResult["response"] = "${error.toString()}";
      return this._mapForResult;
    }
  }

  Future<Map<String, dynamic>> killProcess(int pId)async{
    bool returnStatusKillProcess = Process.killPid(pId);
    this._mapForResult["status"] = returnStatusKillProcess;
    this._mapForResult["pId"] = pId;
    return this._mapForResult;
  }


}


// // CODE FOR DEBUG
// void main(List<String> arguments) async{
//   Map result = await Shell().executableCommand("cdas");
//   print(result["response"].toString());
// }
