import 'dart:io';
import 'dart:convert';

class Shell{

  Shell();

  Map<String, dynamic> _mapForResult = {
      "status": null,
      "pId": null,
      "response": null
  };

   Future<Map<String, dynamic>> executableCommand(String command) async{
    try{
      ProcessResult processResultFromRunCommand = await Process.run(command, new List(), runInShell: true);
      
      dynamic returnProcess = processResultFromRunCommand.stdout;

      if(returnProcess == null){
        _mapForResult["status"] = false;
        return _mapForResult;
      }else{
        _mapForResult["status"] = true;
        _mapForResult["response"] = returnProcess.toString();
        _mapForResult["pId"] = processResultFromRunCommand.pid;
        return _mapForResult;
      }
    }catch(error){
      print(error.toString());
      _mapForResult["status"] = false;
      _mapForResult["error"] = true;
      _mapForResult["response"] = "${error.toString()}";
      return _mapForResult;
    }
  }

  Future<Map<String, dynamic>> executableCommandInPowerShell(String command) async{
    try{
      ProcessResult processResultFromRunCommand = await Process.run("C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe", [command ?? ""], runInShell: true);
      
      dynamic returnProcess = processResultFromRunCommand.stdout;

      if(returnProcess == null){
        _mapForResult["status"] = false;
        return _mapForResult;
      }else{
        _mapForResult["status"] = true;
        _mapForResult["response"] = returnProcess.toString();
        _mapForResult["pId"] = processResultFromRunCommand.pid;
        return _mapForResult;
      }
    }catch(error){
      print(error.toString());
      _mapForResult["status"] = false;
      _mapForResult["error"] = true;
      _mapForResult["response"] = "${error.toString()}";
      return _mapForResult;
    }
  }

}


// // CODE FOR DEBUG
// void main(List<String> arguments) async{
// }
