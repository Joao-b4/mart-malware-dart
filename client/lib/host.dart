import 'dart:io';
import 'dart:typed_data';
import 'package:client/util/manipulate_data.dart';

class Host {
  Socket socket;
  Function handler;

  String ip;
  int port;

  Host(this.ip, this.port);

  connect(Function hd) {
    Socket.connect(ip, port).then((Socket sock) {
      socket = sock;
      handler = hd;
      socket.listen(_dataHandler,
          onError: _errorHandler,
          onDone: _successfulHandler,
          cancelOnError: false);
    }).catchError((dynamic e) {
      print("Unable to connect: ${e.toString()}");
    });
  }

  write(String text) {
    try {
      if (socket != null) {
        socket.write(text);
      }
    } catch (error) {
      print("Error to write in server ${error}");
    }
  }

  disconnect() {
    try {
      if (socket != null) {
        socket.write("Exit...");
        socket.destroy();
      }
    } catch (error) {
      print("Error to finish connect ${error}");
    }
  }

  void _dataHandler(Uint8List data) async {
    try {
      String requestText = ManipulateData.convertCharCodesToString(data);
      handler(requestText);
    } catch (error) {
      _returnError("error in processing data -> ${error.toString()}");
    }
  }

  static void _errorHandler(dynamic errorObject, StackTrace stackError) =>
      print("Error -> ${errorObject.toString}");

  static void _successfulHandler() => print("Finish Connect!");

  void _returnError(String text) =>
      socket.write("[${DateTime.now().toString()}] [ERROR]: ${text}");
}
