import 'dart:io';
import 'dart:typed_data';
import 'package:client/util/manipulate_data.dart';

class Host {
  Socket socket;
  Function listener;

  String ip;
  int port;

  Host(this.ip, this.port);

  connect(Function thenConnect, Function catchError) {
    Socket.connect(ip, port).then((Socket sock) {
      socket = sock;
      thenConnect();
      socket.listen(_dataHandler,
          onError: _errorHandler,
          onDone: _successfulHandler,
          cancelOnError: false);
    }).catchError((dynamic e) {
      catchError(e.toString());
    });
  }

  sendMessage(String text) {
    try {
      if (socket != null) {
        socket.write(text);
      }
    } catch (error) {
      print("Error to send message ${error}");
    }
  }

  disconnect() {
    try {
      if (socket != null) {
        socket.write("Exit...");
        socket.destroy();
      }
    } catch (error) {
      print("Error to finish connect ${error}");
    }
  }

  _dataHandler(Uint8List data) async {
    try {
      String requestText = ManipulateData.convertCharCodesToString(data);
      if (listener != null) {
        listener(requestText);
      } else {
        _returnError("error not listener attr");
      }
    } catch (error) {
      _returnError("error in processing data -> ${error.toString()}");
    }
  }

  _errorHandler(dynamic errorObject, StackTrace stackError) {
    print("Error -> ${errorObject.toString}");
  }

  _successfulHandler() => print("Finish Connect!");

  _returnError(String text) =>
      socket.write("[${DateTime.now().toString()}] [ERROR]: ${text}");
}
