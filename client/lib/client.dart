import 'dart:ffi';
import 'dart:io';
import 'dart:async';
import 'dart:typed_data';
import 'package:client/util/module_selector.dart' as ModuleSelector;
import 'package:client/util/convert.dart' as MyConvert;

Socket socket;

void connect(){
  Socket.connect("localhost", 6661).then((Socket sock) {
   socket = sock;
   socket.listen(_dataHandler, 
      onError: _errorHandler, 
      onDone: _successfulHandler, 
      cancelOnError: false);
   }).catchError((dynamic e) {
      print("Unable to connect: ${e.toString()}");
   }).then((value){
      socket.write(ModuleSelector.modulesAvailableForSelection());
   });
    stdin.listen((data) => socket.write(new String.fromCharCodes(data).trim() + '\n\r'));
}

void _dataHandler(Uint8List data)async{
  try{
    String requestText = MyConvert.convertCharCodesToString(data);
    Map requestMap = MyConvert.convertJsonToMap(requestText);

    if(requestMap.containsKey("id") && requestMap.containsKey("id") != "" && MyConvert.checkStringIsInt(requestMap["id"])){
      int id = int.parse(requestMap["id"]);
      String parameter = requestMap["parameter"] ?? "";

      ModuleSelector.mainSelector(id: id, parameter: parameter, socket: socket);

    }else{
      returnWarning("id invalido");
    }
  }catch(error){
    returnWarning("erro ao processar dados -> ${error.toString()}");
  }
}

void _errorHandler(dynamic errorObject, StackTrace stackError)
 => print("Error -> ${errorObject.toString}");

void _successfulHandler() => print("Finish Connect!");

void returnWarning(String text) => socket.write("WARNING: ${text}");