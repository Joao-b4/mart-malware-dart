import 'dart:io';
import 'dart:async';
import 'package:server/models/client.dart';

class Server {
  static Socket socket;
  static ServerSocket serverSocket;

//InternetAddress.anyIPv4 = get ip now
  static List<Client> clients = [];

  static void listen() {
    ServerSocket.bind("127.0.0.1", 6661).then((ServerSocket server) {
      serverSocket = server;
      print(
          "Server listen: ${serverSocket.address.address}:${serverSocket.port}");
      serverSocket.listen(
        _dataHandler,
        onError: _errorHandler,
        onDone: _successfulHandler,
        cancelOnError: false,
      );
    });
    stdin.listen((data) {
      String text = new String.fromCharCodes(data).trim();
      text = text.replaceAll("\\", "\\\\");
      socket.write(text + '\n\r');
    });
  }

  static void _dataHandler(Socket socketClient) {
    socket = socketClient;

    print(socket.remoteAddress.address);
    Client newClientForListen = new Client(socket);
    clients.add(newClientForListen);
  }

  static void _errorHandler(dynamic errorObject, StackTrace stackError) =>
      print("Error -> ${errorObject.toString}");

  static void _successfulHandler() => print("Finish Connect!");
}
