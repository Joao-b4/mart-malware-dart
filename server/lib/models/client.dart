import 'dart:io';

class Client {
  Socket socket;
  String ip;
  int port;

  Function handler;

  Client(Socket sock) {
    _init(sock);
  }

  _init(Socket sockClient) {
    socket = sockClient;
    ip = socket.remoteAddress.address;
    port = socket.remotePort;
    print("New Client \x1B[32m${ip}:${port}\x1B[32m Connected");
  }

  listener(Function hd) {
    handler = hd;
    socket.listen(_dataHandler);
  }

  _dataHandler(List data) {
    try {
      String text = new String.fromCharCodes(Iterable.castFrom(data)).trim();
      handler(text);
    } catch (error) {
      print("\x1B[31mError: ${error}\x1B[31m");
    }
  }

  sendMessage(String text) {
    try {
      if (socket != null) {
        socket.write(text);
      }
    } catch (error) {
      print("\x1B[31mError to send message: ${error}\x1B[31m");
    }
  }

  destroy() {
    print("Destroy Client \x1B[31m${ip}\x1B[31m");
    socket.destroy();
  }
}
